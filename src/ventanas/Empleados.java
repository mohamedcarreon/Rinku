/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import javax.swing.JOptionPane;
import static ventanas.Login.usuario;

/**
 *
 * @author Mohamed Carreon
 */
public class Empleados extends javax.swing.JFrame {
    int Validacion = 0;
    int NumEmpleado = 0;
    /**
     * Creates new form Empleados
     */
    public Empleados() {
        initComponents();
        this.setSize(600,450);
        this.setResizable(false);
        this.setTitle("Empleados");
        this.setLocationRelativeTo(null);
        tbNuevo.setSize(60,50);
        tbBuscar.setSize(60,50);
        tbModificar.setSize(60,50);
        tbEliminar.setSize(60,50);
        
        BloquearPantalla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Roles = new javax.swing.ButtonGroup();
        Tipos = new javax.swing.ButtonGroup();
        jpDetalle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbChofer = new javax.swing.JRadioButton();
        rbCargador = new javax.swing.JRadioButton();
        rbAuxiliar = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        rbInterno = new javax.swing.JRadioButton();
        rbExterno = new javax.swing.JRadioButton();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tbModificar = new javax.swing.JToggleButton();
        tbEliminar = new javax.swing.JToggleButton();
        tbBuscar = new javax.swing.JToggleButton();
        tbNuevo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frmEmpleados"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(600, 400));

        jpDetalle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("NÃºmero: ");

        jLabel2.setText("Nombre:");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Rol:");

        Roles.add(rbChofer);
        rbChofer.setText("Chofer");
        rbChofer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbChoferActionPerformed(evt);
            }
        });

        Roles.add(rbCargador);
        rbCargador.setText("Cargador");

        Roles.add(rbAuxiliar);
        rbAuxiliar.setText("Auxiliar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbAuxiliar)
                    .addComponent(rbCargador)
                    .addComponent(rbChofer))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbChofer))
                .addGap(18, 18, 18)
                .addComponent(rbCargador)
                .addGap(18, 18, 18)
                .addComponent(rbAuxiliar)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Tipo:");

        Tipos.add(rbInterno);
        rbInterno.setText("Interno");

        Tipos.add(rbExterno);
        rbExterno.setText("Externo");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbInterno)
                    .addComponent(rbExterno))
                .addGap(63, 63, 63))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbInterno))
                .addGap(18, 18, 18)
                .addComponent(rbExterno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpDetalleLayout = new javax.swing.GroupLayout(jpDetalle);
        jpDetalle.setLayout(jpDetalleLayout);
        jpDetalleLayout.setHorizontalGroup(
            jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetalleLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDetalleLayout.createSequentialGroup()
                        .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpDetalleLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jpDetalleLayout.setVerticalGroup(
            jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetalleLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAutoscrolls(true);

        tbModificar.setBackground(new java.awt.Color(153, 153, 240));
        tbModificar.setText("Modificar                    ");
        tbModificar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbModificarActionPerformed(evt);
            }
        });

        tbEliminar.setBackground(new java.awt.Color(153, 153, 240));
        tbEliminar.setText("Eliminar                     ");
        tbEliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEliminarActionPerformed(evt);
            }
        });

        tbBuscar.setBackground(new java.awt.Color(153, 153, 240));
        tbBuscar.setText("Buscar                    ");
        tbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbBuscarActionPerformed(evt);
            }
        });

        tbNuevo.setBackground(new java.awt.Color(153, 153, 240));
        tbNuevo.setText("Nuevo                    ");
        tbNuevo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbNuevo.setName(""); // NOI18N
        tbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(tbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addComponent(tbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
            .addComponent(tbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        
         // VALIDA QUE BOTON ESTA SELECCIONADO Y MANDA A EJECUTAR SU RESPECTIVA FUNCION
        ValidarPantalla();
       
        if(tbNuevo.isSelected()){
            if(Validacion == 0){
                GuardarNuevo();
            }
        }
        else if(tbBuscar.isSelected()){
            if(Validacion == 0){
                Buscar(Integer.parseInt(txtNumero.getText()));
            }
        }
        else if(tbModificar.isSelected()){
            if(Validacion == 0){
                Modificar(Integer.parseInt(txtNumero.getText()));
            }
        }
        else if(tbEliminar.isSelected()){
            if(Validacion == 0){
                Eliminar(Integer.parseInt(txtNumero.getText()));
            }
        }
        
    }//GEN-LAST:event_btnOkActionPerformed

    private void tbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbNuevoActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();
                    
        if (tbNuevo.isSelected()){
            tbBuscar.setSelected(false);
            tbModificar.setSelected(false);
            tbEliminar.setSelected(false);   
            
            txtNumero.enable(false);
            txtNombre.enable(true);
            txtNombre.requestFocus();
            
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbNuevoActionPerformed

    private void tbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbBuscarActionPerformed
        // TODO add your handling code here:
        
        LimpiarPantalla();
        
        if (tbBuscar.isSelected()){
            tbNuevo.setSelected(false);
            tbModificar.setSelected(false);
            tbEliminar.setSelected(false);   
            
            btnOk.enable(false);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbBuscarActionPerformed

    private void tbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbModificarActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();
                    
        if (tbModificar.isSelected()){
            tbBuscar.setSelected(false);
            tbNuevo.setSelected(false);
            tbEliminar.setSelected(false);   
            

            
            txtNumero.enable(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbModificarActionPerformed

    private void tbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEliminarActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();
                   
        if (tbEliminar.isSelected()){
            tbBuscar.setSelected(false);
            tbModificar.setSelected(false);
            tbNuevo.setSelected(false);   
            
            txtNumero.enable(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbEliminarActionPerformed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNumeroActionPerformed

    private void rbChoferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbChoferActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbChoferActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        txtNombre.setText(txtNombre.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
        // VALIDA QUE SI HAY INFORMACION DEL NUMERO DE EMPLEADO EJECUTA LA FUNCION BUSCAR
        if(tbBuscar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                }
            }
        }
        else if(tbModificar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                    DesbloquearPantalla();
                }
                txtNombre.requestFocus();
            }
        }
        else if(tbEliminar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                }
                txtNombre.requestFocus();
            }
        }
       
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER)
        {
            rbChofer.requestFocus();
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        
        if(!Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        
        if(!Character.isAlphabetic(validar) && !Character.isSpaceChar(validar)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped


     public void LimpiarPantalla(){
       txtNumero.setEnabled(true);
       txtNombre.setEnabled(true);
       rbChofer.setEnabled(true);
       rbCargador.setEnabled(true);
       rbAuxiliar.setEnabled(true);
       rbInterno.setEnabled(true);
       rbExterno.setEnabled(true);
         
        txtNumero.setText("");
        txtNombre.setText("");
        rbChofer.setSelected(false);
        rbCargador.setSelected(false);
        rbAuxiliar.setSelected(false);
        rbInterno.setSelected(false);
        rbExterno.setSelected(false);
        Validacion = 0;
        Roles.clearSelection();
        Tipos.clearSelection();
    }
     
    public void BloquearPantalla(){
       txtNumero.setEnabled(false);
       txtNombre.setEnabled(false);
       rbChofer.setEnabled(false);
       rbCargador.setEnabled(false);
       rbAuxiliar.setEnabled(false);
       rbInterno.setEnabled(false);
       rbExterno.setEnabled(false);
    } 
    
    public void DesbloquearPantalla(){
        txtNombre.setEnabled(true);
        rbChofer.setEnabled(true);
        rbCargador.setEnabled(true);
        rbAuxiliar.setEnabled(true);
        rbInterno.setEnabled(true);
        rbExterno.setEnabled(true);
    }
     
     // VALIDA LOS CAMPOS MINIMOS PARA CADA PANTALLA
     private void ValidarPantalla(){
         if(tbNuevo.isSelected()){
             if(txtNombre.getText().isEmpty() || (rbChofer.isSelected() == false && rbCargador.isSelected() == false && rbAuxiliar.isSelected() == false) || (rbInterno.isSelected() == false && rbExterno.isSelected() == false) ){
                 JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos (excepto nÃºmero).");
                 Validacion++;
             }
         }
         else if(tbBuscar.isSelected()){
             if(txtNumero.getText().isEmpty()){
                 JOptionPane.showMessageDialog(null, "Debes ingresar el nÃºmero de empleado.");
                 Validacion++;
             }
         }
         else if(tbModificar.isSelected()){
             if(txtNombre.getText().isEmpty() || (rbChofer.isSelected() == false && rbCargador.isSelected() == false && rbAuxiliar.isSelected() == false) || (rbInterno.isSelected() == false && rbExterno.isSelected() == false) ){
                 JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos (excepto nÃºmero).");
                 Validacion++;
             }   
         }
         else if(tbEliminar.isSelected()){
              if(txtNombre.getText().isEmpty() || (rbChofer.isSelected() == false && rbCargador.isSelected() == false && rbAuxiliar.isSelected() == false) || (rbInterno.isSelected() == false && rbExterno.isSelected() == false) ){
                  JOptionPane.showMessageDialog(null, "Debes realizar una consulta primero.");
                  Validacion++;
             }
         }
     }
     
    // ALTA DEL EMPLEADO
    private void GuardarNuevo(){
         String Nombre = "", Rol = "", Tipo = "";
         
         Nombre = txtNombre.getText().trim();
         
         if (rbChofer.isSelected()){
             Rol = "1";
         }
         else if(rbCargador.isSelected()){
             Rol = "2";
         }
         else if(rbAuxiliar.isSelected()){
             Rol = "3";
         }
         
         if (rbInterno.isSelected()){
             Tipo = "1";
         }
         else if(rbExterno.isSelected()){
             Tipo = "2";
         }
         if(Validacion == 0){
             
             try{
                 Connection cn = Conexion.conectar();
                 PreparedStatement pst = cn.prepareStatement("insert into empleados values (?,?,?,?,?)");

                 pst.setInt(1, 0);
                 pst.setString(2, Nombre);
                 pst.setString(3, Rol);
                 pst.setString(4, Tipo);
                 pst.setString(5, "ACTIVO");
                 
                 pst.executeUpdate();
                 cn.close();

                 ObtenerNumeroEmpleado();
                 
                 JOptionPane.showMessageDialog(null, "Registro exitoso. NÃºmero de empleado es: " + NumEmpleado);
                 LimpiarPantalla();
                 tbNuevo.setSelected(false);
                 BloquearPantalla();
             }
             catch (Exception e){
                System.err.println("Error en el boton Acceder. " + e);
                JOptionPane.showMessageDialog(null, "Error al iniciar sesiÃ³n, contacte al Administrador. 471");
             }
         
         }
     }
     
    // OBTIENE EL NUEVO NUMERO DEL EMPLEADO QUE SE ACABA DE DAR DE ALTA
    public void ObtenerNumeroEmpleado(){
        NumEmpleado = 0;
        try{
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select max(id_empleado) as id_empleado from empleados");

            ResultSet rs = pst.executeQuery();
            if(rs.next()){
                NumEmpleado = rs.getInt("id_empleado");
                rs.close();
            }   
        }
        catch(Exception e){
            System.err.println("Error al obtener el nÃºmero de empleado. " + e);
            JOptionPane.showMessageDialog(null, "Error al obtener el nÃºmero de empleado., contacte al Administrador. ");
        }
    } 
    
    // OBTIENE EL NOMBRE ROL Y TIPO DEL REPOSITORIO DE EMPLEADOS
    private void Buscar(int NumEmpleado){
        String Nombre = "", Tipo = "";
        String Rol = "";
        txtNombre.enable(true);
        rbChofer.enable(true);
        rbCargador.enable(true);
        rbAuxiliar.enable(true);
        rbInterno.enable(true);
        rbExterno.enable(true);
        
  
        if(Validacion == 0){
            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select nombre, rol, tipo from empleados where status = 'ACTIVO' and id_empleado = " + NumEmpleado);

                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    Nombre = rs.getString("nombre").trim();
                    Rol = rs.getString("rol").trim();
                    Tipo = rs.getString("tipo").trim();
                    rs.close();
                    
                    txtNombre.setText(Nombre);
                    txtNombre.enable(false);

                    if(Rol.equals("1")){
                        rbChofer.setSelected(true);
                    }
                    else if(Rol.equals("2")){
                        rbCargador.setSelected(true);
                    }
                    else if(Rol.equals("3")){
                        rbAuxiliar.setSelected(true);
                    }
                    rbChofer.enable(false);
                    rbCargador.enable(false);
                    rbAuxiliar.enable(false);
                    
                    if(Tipo.equals("1")){
                        rbInterno.setSelected(true);
                    }
                    else if(Tipo.equals("2")){
                        rbExterno.setSelected(true);
                    }
                    rbInterno.enable(false);
                    rbExterno.enable(false);

                }
                else{
                    JOptionPane.showMessageDialog(null, "No se encuentra el empleado. ");
                }
            }
            catch(Exception e){
                System.err.println("Error en la busqueda del empleado. " + e);
                JOptionPane.showMessageDialog(null, "Error en la busqueda del empleado., contacte al Administrador. ");
            }
         }
    }
    
    
    
    // MOPDIFICA LOS REGISTROS DE UN EMPLEADO
    private void Modificar(int NumEmpleado){
        String Nombre = "", Rol = "", Tipo = "";

        Nombre = txtNombre.getText().trim();

        if (rbChofer.isSelected()){
            Rol = "1";
        }
        else if(rbCargador.isSelected()){
            Rol = "2";
        }
        else if(rbAuxiliar.isSelected()){
            Rol = "3";
        }

        if (rbInterno.isSelected()){
            Tipo = "1";
        }
        else if(rbExterno.isSelected()){
            Tipo = "2";
        }
        if(Validacion == 0){

            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("update empleados set nombre = ?, rol = ?, tipo = ? where id_empleado = " + NumEmpleado);

                pst.setString(1, Nombre);
                pst.setString(2, Rol);
                pst.setString(3, Tipo);

                pst.executeUpdate();
                cn.close();

                JOptionPane.showMessageDialog(null, "ModificaciÃ³n exitosa.");
                LimpiarPantalla();
                tbModificar.setSelected(false);
                BloquearPantalla();
            }
            catch (Exception e){
               System.err.println("Error al iniciar modificar. " + e);
               JOptionPane.showMessageDialog(null, "Error al iniciar modificar, contacte al Administrador.");
            }

        }
    }
    

    // ELIMINA EL REGISTRO DE UN EMPLEADO
    private void Eliminar(int NumEmpleado){

        if(Validacion == 0){

            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("delete from empleados where id_empleado = " + NumEmpleado);
                pst.executeUpdate();
                cn.close();

                JOptionPane.showMessageDialog(null, "EliminaciÃ³n exitosa.");
                LimpiarPantalla();
                tbEliminar.setSelected(false);
                BloquearPantalla();
            }
            catch (Exception e){
               System.err.println("Error al iniciar Eliminar. " + e);
               JOptionPane.showMessageDialog(null, "Error al iniciar a eliminar, contacte al Administrador.");
            }

        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                
                new Empleados().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Roles;
    private javax.swing.ButtonGroup Tipos;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jpDetalle;
    private javax.swing.JRadioButton rbAuxiliar;
    private javax.swing.JRadioButton rbCargador;
    private javax.swing.JRadioButton rbChofer;
    private javax.swing.JRadioButton rbExterno;
    private javax.swing.JRadioButton rbInterno;
    private javax.swing.JToggleButton tbBuscar;
    private javax.swing.JToggleButton tbEliminar;
    private javax.swing.JToggleButton tbModificar;
    private javax.swing.JToggleButton tbNuevo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
