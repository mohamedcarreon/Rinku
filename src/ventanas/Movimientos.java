/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import javax.swing.JOptionPane;
import static ventanas.Login.usuario;

/**
 *
 * @author Mohamed Carreon
 */
public class Movimientos extends javax.swing.JFrame {
    int Validacion = 0;
    int NumEmpleado = 0;
    int CantEntregas = 0, PercepcionesBase = 8 * 30, PercepcionesEntregas = 0, PercepcionesBonos = 0;
    String Turno = "N";

    /**
     * Creates new form Movimientos
     */
    public Movimientos() {
        initComponents();
        this.setSize(600,500);
        this.setResizable(false);
        this.setTitle("Captura de Movimientos");
        this.setLocationRelativeTo(null);
        tbNuevo.setSize(60,50);
        tbBuscar.setSize(60,50);
        tbModificar.setSize(60,50);
        tbEliminar.setSize(60,50);
        spCantEntregas.setValue(0);
        spCantEntregas.setVisible(true);
        spCantEntregas.setEnabled(false);
        
        cbxTurno.setEnabled(true);
        cbxTurno.addItem("CHOFER");
        cbxTurno.addItem("CARGADOR");
        
        BloquearPantalla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tbModificar = new javax.swing.JToggleButton();
        tbEliminar = new javax.swing.JToggleButton();
        tbBuscar = new javax.swing.JToggleButton();
        tbNuevo = new javax.swing.JToggleButton();
        jpDetalle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRol = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        spCantEntregas = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbFecha = new javax.swing.JComboBox<>();
        txtFecha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbxTurno = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAutoscrolls(true);

        tbModificar.setBackground(new java.awt.Color(153, 153, 240));
        tbModificar.setText("Modificar                    ");
        tbModificar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbModificarActionPerformed(evt);
            }
        });

        tbEliminar.setBackground(new java.awt.Color(153, 153, 240));
        tbEliminar.setText("Eliminar                     ");
        tbEliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEliminarActionPerformed(evt);
            }
        });

        tbBuscar.setBackground(new java.awt.Color(153, 153, 240));
        tbBuscar.setText("Buscar                    ");
        tbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbBuscarActionPerformed(evt);
            }
        });

        tbNuevo.setBackground(new java.awt.Color(153, 153, 240));
        tbNuevo.setText("Nuevo                    ");
        tbNuevo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbNuevo.setName(""); // NOI18N
        tbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(tbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addComponent(tbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
            .addComponent(tbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jpDetalle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Número");

        jLabel2.setText("Nombre:");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel3.setText("Rol:");

        jLabel4.setText("Tipo:");

        jLabel5.setText("Fecha:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("( YYYYMMDD )");

        cbFecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cbFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFechaActionPerformed(evt);
            }
        });
        cbFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbFechaKeyPressed(evt);
            }
        });

        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaKeyTyped(evt);
            }
        });

        jLabel7.setText("Cantidad de Entregas:");

        cbxTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jLabel8.setText("Cubrió Turno:");

        javax.swing.GroupLayout jpDetalleLayout = new javax.swing.GroupLayout(jpDetalle);
        jpDetalle.setLayout(jpDetalleLayout);
        jpDetalleLayout.setHorizontalGroup(
            jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetalleLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpDetalleLayout.createSequentialGroup()
                        .addComponent(txtRol, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDetalleLayout.createSequentialGroup()
                        .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDetalleLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDetalleLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpDetalleLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(cbxTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(spCantEntregas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jpDetalleLayout.setVerticalGroup(
            jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetalleLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(cbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spCantEntregas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpDetalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbModificarActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();

        if (tbModificar.isSelected()){
            tbBuscar.setSelected(false);
            tbNuevo.setSelected(false);
            tbEliminar.setSelected(false);

            BloquearPantalla();
            txtNumero.setEnabled(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbModificarActionPerformed

    private void tbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEliminarActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();

        if (tbEliminar.isSelected()){
            tbBuscar.setSelected(false);
            tbModificar.setSelected(false);
            tbNuevo.setSelected(false);

            BloquearPantalla();
            txtNumero.setEnabled(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbEliminarActionPerformed

    private void tbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbBuscarActionPerformed
        // TODO add your handling code here:

        LimpiarPantalla();

        if (tbBuscar.isSelected()){
            tbNuevo.setSelected(false);
            tbModificar.setSelected(false);
            tbEliminar.setSelected(false);

            BloquearPantalla();
            txtNumero.setEnabled(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbBuscarActionPerformed

    private void tbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbNuevoActionPerformed
        // TODO add your handling code here:
        LimpiarPantalla();

        if (tbNuevo.isSelected()){
            tbBuscar.setSelected(false);
            tbModificar.setSelected(false);
            tbEliminar.setSelected(false);

            BloquearPantalla();
            txtNumero.setEnabled(true);
            txtNumero.requestFocus();
        }
        else{
            BloquearPantalla();
        }
    }//GEN-LAST:event_tbNuevoActionPerformed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    // CUADRO DE TEXTO QUE EJECUTA LA FUNCION DE BUSCAR EN PRIMERA INSTANCIA EN TODOS LOS BOTONES EXCEPTO EN EL DE NUEVO
    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
        if(tbNuevo.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                    if(!txtNombre.getText().isEmpty()){
                        cbFecha.setVisible(false);
                        txtFecha.setEnabled(true);
                        txtFecha.setVisible(true);
                        txtFecha.setText("");
                        spCantEntregas.setEnabled(true);
                        spCantEntregas.setVisible(true);
                        
                        if(txtRol.getText().trim().equals("AUXILIAR")){
                            cbxTurno.setEnabled(true);
                            cbxTurno.setVisible(true);  
                        }
                        else{
                            cbxTurno.setEnabled(false);
                            cbxTurno.setVisible(false);    
                        }

                        
                        btnOk.setEnabled(true);
                        txtFecha.requestFocus();
                    }
                }
            }
        }
        else if(tbBuscar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                    if(!txtNombre.getText().isEmpty()){
                        cbFecha.setVisible(true);
                        txtFecha.setEnabled(false);
                        txtFecha.setVisible(false);
                        txtFecha.setText("");
                        ObtenerFechas(Integer.parseInt(txtNumero.getText()));
                    }
                }
            }
        }
        else if(tbModificar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                    if(!txtNombre.getText().isEmpty()){
                        cbFecha.setVisible(true);
                        txtFecha.setEnabled(false);
                        txtFecha.setVisible(false);
                        txtFecha.setText("");
                        ObtenerFechas(Integer.parseInt(txtNumero.getText()));
                        
                        if(txtRol.getText().trim().equals("AUXILIAR")){
                            cbxTurno.setEnabled(true);
                            cbxTurno.setVisible(true);  
                        }
                        else{
                            cbxTurno.setEnabled(false);
                            cbxTurno.setVisible(false);    
                        }
                                                
                        if(cbFecha.getItemCount()>1){
                            btnOk.setEnabled(true);
                        }
                    }
                }
            }
        }
        else if(tbEliminar.isSelected()){
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                if(Validacion == 0){
                    Buscar(Integer.parseInt(txtNumero.getText()));
                    if(!txtNombre.getText().isEmpty()){
                        cbFecha.setVisible(true);
                        txtFecha.setEnabled(false);
                        txtFecha.setVisible(false);
                        txtFecha.setText("");
                        ObtenerFechas(Integer.parseInt(txtNumero.getText()));
                        if(cbFecha.getItemCount()>1){
                            btnOk.setEnabled(true);
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if(!Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER)
        {

        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        txtNombre.setText(txtNombre.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if(!Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    // BOTON DE DE OK PARA CONFIRMAR EL NUEVO REGISTRO ASI COMO SU BUSQUEDA, MODIFICACION O ELIMINACION DEL MOVIMIENTO
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        ValidarPantalla();

        if(tbNuevo.isSelected()){
            if(Validacion == 0){
                GuardarNuevo(Integer.parseInt(txtNumero.getText()), txtFecha.getText());
            }

        }
        else if(tbBuscar.isSelected()){
            if(Validacion == 0){
                Buscar(Integer.parseInt(txtNumero.getText()));
            }
        }
        else if(tbModificar.isSelected()){
            if(Validacion == 0){
                int i = cbFecha.getSelectedIndex();                
                Modificar(Integer.parseInt(txtNumero.getText()), cbFecha.getItemAt(i));
            }
        }
        else if(tbEliminar.isSelected()){
            if(Validacion == 0){
                int i = cbFecha.getSelectedIndex();                
                Eliminar(Integer.parseInt(txtNumero.getText()), cbFecha.getItemAt(i));
            }
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cbFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbFechaKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbFechaKeyPressed

    private void cbFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFechaActionPerformed
        // TODO add your handling code here:
        int i = cbFecha.getSelectedIndex();
        
        if(i>0){
            if(tbBuscar.isSelected()){
                ObtenerMovimiento(Integer.parseInt(txtNumero.getText()),cbFecha.getItemAt(i));
            }
            else if(tbModificar.isSelected()){
                ObtenerMovimiento(Integer.parseInt(txtNumero.getText()),cbFecha.getItemAt(i));
                cbxTurno.setEnabled(true);
                spCantEntregas.setEnabled(true);
            }
            else if(tbEliminar.isSelected()){
                ObtenerMovimiento(Integer.parseInt(txtNumero.getText()),cbFecha.getItemAt(i));
           
            }
        spCantEntregas.setEnabled(true);
        spCantEntregas.setVisible(true);
                
        }
    }//GEN-LAST:event_cbFechaActionPerformed

    private void txtFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if(!Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtFechaKeyTyped

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        // TODO add your handling code here:
            if(evt.getKeyCode() == evt.VK_ENTER)
            {
                spCantEntregas.requestFocus();
            }
    }//GEN-LAST:event_txtFechaKeyPressed

    
    
    private void LimpiarPantalla(){
        DesbloquearPantalla();
        
        txtNumero.setText("");
        txtNombre.setText("");
        txtRol.setText("");
        txtTipo.setText("");
  
        txtFecha.setText("");
        cbFecha.removeAllItems();
        spCantEntregas.setValue(0);

        Validacion = 0;
 
    }
    
    
    private void BloquearPantalla(){
        txtNumero.setEnabled(false);
        txtNombre.setEnabled(false);
        txtRol.setEnabled(false);
        txtTipo.setEnabled(false);
        cbxTurno.setEnabled(false);
        
        btnOk.setEnabled(false);
        cbFecha.setEnabled(false);
        txtFecha.setEnabled(false);
        txtFecha.setVisible(false);
        spCantEntregas.setEnabled(false);
        
    } 
    
    public void DesbloquearPantalla(){
        txtNumero.setEnabled(true);
        txtNombre.setEnabled(true);
        txtRol.setEnabled(true);
        txtTipo.setEnabled(true);
        cbxTurno.setEnabled(true);

        btnOk.setEnabled(true);
        cbFecha.setEnabled(true);
        spCantEntregas.setEnabled(true);
    }
    
    // VALIDA LOS CAMPOS NECESARIOS PARA CADA PANTALLA
     private void ValidarPantalla(){
         if(tbNuevo.isSelected()){
             if(txtNombre.getText().isEmpty() || txtFecha.getText().isEmpty() ){
                 JOptionPane.showMessageDialog(null, "Faltan campos por llenar.");
                 Validacion++;
             }
         }
         else if(tbBuscar.isSelected()){
             if(txtNumero.getText().isEmpty()){
                 JOptionPane.showMessageDialog(null, "Debes ingresar el número de empleado.");
                 Validacion++;
             }
         }
         else if(tbModificar.isSelected()){
             if(txtNumero.getText().isEmpty() || cbFecha.getSelectedIndex()<1 ){
                 JOptionPane.showMessageDialog(null, "Debes seleccionar una fecha.");
                 Validacion++;
             }   
         }
         else if(tbEliminar.isSelected()){
             if(txtNumero.getText().isEmpty() || cbFecha.getSelectedIndex()<1 ){
                 JOptionPane.showMessageDialog(null, "Debes seleccionar una fecha.");
                 Validacion++;
             }
         }
     }
         
    // FUNCION DE BUSQUEDA DE LOS EMPLEADOS QUE OBTIENE EL NOMBRE, ROL Y TIPO
    private void Buscar(int NumEmpleado){
        String Nombre = "", Rol = "", Tipo = "";
        txtNombre.setEnabled(true);
        txtRol.setEnabled(true);
        txtTipo.setEnabled(true);        
  
        if(Validacion == 0){
            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select nombre, rol, tipo from empleados where status = 'ACTIVO' and id_empleado = " + NumEmpleado);

                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    Nombre = rs.getString("nombre").trim();
                    Rol = rs.getString("rol").trim();
                    Tipo = rs.getString("tipo").trim();
                    rs.close();
                    
                    txtNombre.setText(Nombre);
                    txtNombre.setEnabled(false);

                    if(Rol.equals("1")){
                        txtRol.setText("CHOFER");
                    }
                    else if(Rol.equals("2")){
                        txtRol.setText("CARGADOR");
                    }
                    else if(Rol.equals("3")){
                        txtRol.setText("AUXILIAR");
                    }
                    txtRol.setEnabled(false);
                    
                    if(Tipo.equals("1")){
                        txtTipo.setText("INTERNO");
                    }
                    else if(Tipo.equals("2")){
                        txtTipo.setText("EXTERNO");
                    }
                    txtTipo.setEnabled(false);
                }
                else{
                    JOptionPane.showMessageDialog(null, "No se encuentra el empleado. ");
                    LimpiarPantalla();
                    BloquearPantalla();
                    txtNumero.setEnabled(true);
                    txtNumero.requestFocus();
                }
            }
            catch(Exception e){
                System.err.println("Error en la busqueda del empleado. " + e);
                JOptionPane.showMessageDialog(null, "Error en la busqueda del empleado., contacte al Administrador. ");
            }
        }
    }
 
    // FUNCION QUE OBTIENE LAS DIFRENTES FECHAS QUE TIENE ASIGNADO UN EMPLEADO
    private void ObtenerFechas(int NumEmpleado){
        String Fecha = "";
        cbFecha.setEnabled(true);
        cbFecha.removeAllItems();
        if(Validacion == 0){
            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select fecha from movimientos where id_empleado = " + NumEmpleado);

                ResultSet rs = pst.executeQuery();
                cbFecha.addItem("Seleccionar");
                while (rs.next()){
                    Fecha = rs.getString("fecha").trim();
                    cbFecha.addItem(Fecha);
                }
                rs.close();
            }
            catch(Exception e){
                System.err.println("Error en la busqueda de fechas. " + e);
                JOptionPane.showMessageDialog(null, "Error en la busqueda de fechas., contacte al Administrador. ");
            }
         }
    }

    // FUNCION QUE OBTIENE TODOS LOS MOVIMIENTOS DEL EMPLEADO
    private void ObtenerMovimiento(int NumEmpleado, String Fecha){
        int CantEntregas = 0;
        String Turno = "";
        
        if(Validacion == 0){
            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select cantidad_entregas, cubrio_turno from movimientos where id_empleado = " + NumEmpleado + " and fecha = '" + Fecha + "'");

                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    CantEntregas = rs.getInt("cantidad_entregas");
                    Turno = rs.getString("cubrio_turno").trim();
                    cbxTurno.setEnabled(true);

                    rs.close();
                    if (CantEntregas > 0){
                        spCantEntregas.setValue(CantEntregas);
                    }
                    else{
                        spCantEntregas.setValue(0);
                    }
                    
                    if(Turno.equals("1")){
                        cbxTurno.setSelectedIndex(1);
                    }
                    else if(Turno.equals("2")){
                        cbxTurno.setSelectedIndex(2);
                    }
                    else{
                        cbxTurno.setSelectedIndex(0);
                    }
                    
                    
                    
                rs.close();
                }
                else{
                    JOptionPane.showMessageDialog(null, "No se encuentra el movimiento del empleado. ");
                }
            }
            catch(Exception e){
                System.err.println("Error en la busqueda de movimientos. " + e);
                JOptionPane.showMessageDialog(null, "Error en la busqueda de movimientos., contacte al Administrador. ");
            }
            }
        }     
    
    
    
    // FUNCION QUE GUARDA UN NUEVO REGISTRO DEL MOVIMIENTO DEL EMPLEADO
    private void GuardarNuevo(int NumEmpleado, String Fecha){
        if(Validacion == 0){

            CalcularPercepciones();
            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("insert into movimientos values (?,?,?,?,?,?,?,?)");

                pst.setInt(1, 0);
                pst.setInt(2, NumEmpleado);
                pst.setString(3, Fecha);
                pst.setInt(4, CantEntregas);
                pst.setString(5, Turno);
                pst.setInt(6, PercepcionesBase);
                pst.setInt(7, PercepcionesEntregas);
                pst.setInt(8, PercepcionesBonos);
                

                pst.executeUpdate();
                cn.close();

                JOptionPane.showMessageDialog(null, "Registro exitoso. ");
                LimpiarPantalla();
                tbNuevo.setSelected(false);
                BloquearPantalla();
            }
            catch (Exception e){
               System.err.println("Error en el boton Ok. " + e);
               JOptionPane.showMessageDialog(null, "Error al iniciar sesión, contacte al Administrador.");
            }

        }
     }
     
    
    // FUNCION QUE HACE UNA MODIFICACION AL REGISTRO DE UN MOVIMIENTO DEL EMPLEADO
    private void Modificar(int NumEmpleado, String Fecha){
        CalcularPercepciones();
        if(Validacion == 0){

            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("update movimientos set cantidad_entregas = ?, cubrio_turno = ?, percepciones_base = ?, percepciones_entregas = ?, percepciones_bonos = ? where id_empleado = " + NumEmpleado + " and fecha = '" + Fecha + "'");

                pst.setInt(1, CantEntregas);
                pst.setString(2,Turno);
                pst.setInt(3, PercepcionesBase);
                pst.setInt(4, PercepcionesEntregas);
                pst.setInt(5, PercepcionesBonos);

                pst.executeUpdate();
                cn.close();

                JOptionPane.showMessageDialog(null, "Modificación exitosa.");
                LimpiarPantalla();
                tbModificar.setSelected(false);
                BloquearPantalla();
            }
            catch (Exception e){
               System.err.println("Error al iniciar modificar. " + e);
               JOptionPane.showMessageDialog(null, "Error al iniciar modificar, contacte al Administrador.");
            }

        }
    }
     
    // FUNCION QUE ELIMINA UN REGISTRO DE UN MOVIMIENTO DE UN EMPLEADO
    private void Eliminar(int NumEmpleado, String Fecha){

        if(Validacion == 0){

            try{
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("delete from movimientos where id_empleado = " + NumEmpleado + " and fecha = '" + Fecha + "'");
                pst.executeUpdate();
                cn.close();

                JOptionPane.showMessageDialog(null, "Eliminación exitosa.");
                LimpiarPantalla();
                tbEliminar.setSelected(false);
                BloquearPantalla();
            }
            catch (Exception e){
               System.err.println("Error al iniciar Eliminar. " + e);
               JOptionPane.showMessageDialog(null, "Error al iniciar a eliminar, contacte al Administrador.");
            }

        }
    }
    

    //  FUNCION PARA REALIZAR EL CALCULO DE PERCEPCIONES DE UNA FECHA O REGISTRO
    private void CalcularPercepciones(){
        // CALCULA EL SUELDO BASE DIARIO
        PercepcionesBase = 8 * 30;
        PercepcionesEntregas = 0;
        PercepcionesBonos = 0;
        CantEntregas = 0;
        Turno = "N";
        String Rol = "";
        

        if((int)spCantEntregas.getValue()>0){
            CantEntregas = (int)spCantEntregas.getValue();
            Rol = txtRol.getText().trim();

            // CALCULA EL SUELDO POR ENTREGAS DIARIO
            PercepcionesEntregas = 5 * CantEntregas;

            //  CALCULA EL SUELDO POR BONOS DIARIOS
            if(Rol.equals("CHOFER")){
                PercepcionesBonos = CantEntregas * 10;
            }
            else if(Rol.equals("CARGADOR")){
                PercepcionesBonos = CantEntregas * 5;
            }
            else if(Rol.equals("AUXILIAR")){
                if(cbxTurno.getSelectedIndex() == 1){
                    Turno = "1";
                    PercepcionesBonos = CantEntregas * 10;
                }
                else if(cbxTurno.getSelectedIndex() == 2){
                    Turno = "2";
                    PercepcionesBonos = CantEntregas * 5;
                }
                else{
                    Turno = "N";
                    PercepcionesBonos = 0;
                }
            }
        }
        else{
            CantEntregas = 0;
        }

    }




     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Movimientos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<String> cbFecha;
    private javax.swing.JComboBox<String> cbxTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpDetalle;
    private javax.swing.JSpinner spCantEntregas;
    private javax.swing.JToggleButton tbBuscar;
    private javax.swing.JToggleButton tbEliminar;
    private javax.swing.JToggleButton tbModificar;
    private javax.swing.JToggleButton tbNuevo;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRol;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
